<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on linux)" generated="20200317 16:33:11.831" rpa="false">
<suite id="s1" name="BlogPostApiTestsAsAdmin" source="/home/hakan/Python/Robot/robot-fw-requests-library-tests/Tests/BlogPostApiTestsAsAdmin.robot">
<test id="s1-t1" name="Check BlogPostAPI specification">
<kw name="Query BlogPostAPI Specification">
<kw name="Make Options Request" library="AdminUser">
<assign>
<var>${OPTIONS_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:12.217" level="INFO">OPTIONS Request using : uri=/api/postings/, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x', 'Host': 'glacial-earth-31542.herokuapp.com', 'Origin': 'https://glacial-earth-31542.herokuapp.com', 'X-Requested-With': 'XMLHttpRequest', 'Sec-Fetch-Dest': 'empty', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8'} 
data=None 
json=None</msg>
<msg timestamp="20200317 16:33:13.122" level="INFO">${OPTIONS_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:12.216" endtime="20200317 16:33:13.123"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${OPTIONS_RESPONSE}</arg>
</arguments>
<msg timestamp="20200317 16:33:13.123" level="INFO">${OPTIONS_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:13.123" endtime="20200317 16:33:13.123"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:12.215" endtime="20200317 16:33:13.123"></status>
</kw>
<kw name="Verify BlogPostAPI Specification">
<kw name="Verify Options Response" library="AdminUser">
<arguments>
<arg>options_response=${OPTIONS_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:13.124" endtime="20200317 16:33:13.124"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.124" endtime="20200317 16:33:13.124"></status>
</kw>
<kw name="Set &quot;Posting Spec&quot;">
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${POSTING_SPEC}</arg>
<arg>${OPTIONS_RESPONSE.json()}[actions][POST]</arg>
</arguments>
<msg timestamp="20200317 16:33:13.128" level="INFO">${POSTING_SPEC} = {'url': {'type': 'field', 'required': False, 'read_only': True, 'label': 'Url'}, 'id': {'type': 'integer', 'required': False, 'read_only': True, 'label': 'ID'}, 'user': {'type': 'field', 'required': F...</msg>
<status status="PASS" starttime="20200317 16:33:13.127" endtime="20200317 16:33:13.128"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.127" endtime="20200317 16:33:13.129"></status>
</kw>
<tags>
<tag>smoke-as-admin</tag>
</tags>
<status status="PASS" starttime="20200317 16:33:12.213" endtime="20200317 16:33:13.135" critical="yes"></status>
</test>
<test id="s1-t2" name="Query &amp; Verify Pre-Set Postings (Admin)">
<kw name="Read &quot;Registered Postings&quot;">
<kw name="Make Get Request" library="AdminUser">
<assign>
<var>${GET_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:13.137" level="INFO">GET Request using : uri=/api/postings/, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x', 'Host': 'glacial-earth-31542.herokuapp.com', 'Cache-Control': 'max-age=0', 'Upgrade-Insecure-Requests': '1', 'Sec-Fetch-Dest': 'document', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8'} 
data=None 
json=None</msg>
<msg timestamp="20200317 16:33:13.349" level="INFO">${GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:13.136" endtime="20200317 16:33:13.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200317 16:33:13.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:13.350" endtime="20200317 16:33:13.350"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${GET_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>@{registered_postings}</var>
</assign>
<msg timestamp="20200317 16:33:13.351" level="INFO">@{registered_postings} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': "My First Blog's content", 'timestamp': '2019-12-18T17:06:54.373451+0...</msg>
<status status="PASS" starttime="20200317 16:33:13.351" endtime="20200317 16:33:13.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{REGISTERED_POSTINGS}</arg>
<arg>@{registered_postings}</arg>
</arguments>
<msg timestamp="20200317 16:33:13.352" level="INFO">@{REGISTERED_POSTINGS} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': "My First Blog's content", 'timestamp': '2019-12-18T17:06:54.373451+0...</msg>
<status status="PASS" starttime="20200317 16:33:13.351" endtime="20200317 16:33:13.352"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.136" endtime="20200317 16:33:13.352"></status>
</kw>
<kw name="Verify &quot;Registered Postings&quot; Against Posting Spec">
<kw name="Verify All Postings" library="Utilities">
<doc>:param postings_to_verify: a list of postings, where each posting needs to be verified against posting_spec
:param posting_spec: a dict containing keys, which map to posting fields
:return: None</doc>
<arguments>
<arg>postings_to_verify=${REGISTERED_POSTINGS}</arg>
<arg>posting_spec=${POSTING_SPEC}</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:13.355" endtime="20200317 16:33:13.355"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.354" endtime="20200317 16:33:13.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{PRE_SET_POSTINGS}</arg>
<arg>@{REGISTERED_POSTINGS}</arg>
</arguments>
<msg timestamp="20200317 16:33:13.360" level="INFO">@{PRE_SET_POSTINGS} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': "My First Blog's content", 'timestamp': '2019-12-18T17:06:54.373451+0...</msg>
<status status="PASS" starttime="20200317 16:33:13.359" endtime="20200317 16:33:13.360"></status>
</kw>
<tags>
<tag>smoke-as-admin</tag>
</tags>
<status status="PASS" starttime="20200317 16:33:13.135" endtime="20200317 16:33:13.360" critical="yes"></status>
</test>
<test id="s1-t3" name="Test Creating &quot;Additional Postings&quot;">
<kw name="Create &quot;Additional Postings&quot;">
<kw name="${p} IN [ @{POSTINGS_TO_CREATE} ]" type="for">
<kw name="${p} = {'title': 'Posting 1', 'content': 'Posting 1 content'}" type="foritem">
<kw name="Create Posting">
<arguments>
<arg>posting=${p}</arg>
</arguments>
<kw name="Make Post Request" library="AdminUser">
<arguments>
<arg>posting=${posting}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:13.364" level="INFO">POST Request using : uri=/api/postings/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'text/html; q=1.0, */*', 'Connection': 'keep-alive', 'Host': 'glacial-earth-31542.herokuapp.com', 'Origin': 'https://glacial-earth-31542.herokuapp.com', 'Content-Type': 'application/json', 'Sec-Fetch-Dest': 'empty', 'X-Requested-With': 'XMLHttpRequest', 'X-CSRFTOKEN': '5cLs1tbLS7a3xEEbwKWq8NkcWu585U26OZi9Ce3h6p5edoM3fbpdpiqmynhUQwfW', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x'} 
data={"title": "Posting 1", "content": "Posting 1 content"} 
json=None</msg>
<msg timestamp="20200317 16:33:13.963" level="INFO">${POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:13.364" endtime="20200317 16:33:13.963"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${POST_RESPONSE}</arg>
</arguments>
<msg timestamp="20200317 16:33:13.964" level="INFO">${POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:13.963" endtime="20200317 16:33:13.964"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.363" endtime="20200317 16:33:13.964"></status>
</kw>
<kw name="Verify Post Request Success">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200317 16:33:13.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:13.965" endtime="20200317 16:33:13.965"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.964" endtime="20200317 16:33:13.966"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.363" endtime="20200317 16:33:13.966"></status>
</kw>
<kw name="${p} = {'title': 'Posting 2', 'content': 'Posting 2 content'}" type="foritem">
<kw name="Create Posting">
<arguments>
<arg>posting=${p}</arg>
</arguments>
<kw name="Make Post Request" library="AdminUser">
<arguments>
<arg>posting=${posting}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:13.967" level="INFO">POST Request using : uri=/api/postings/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'text/html; q=1.0, */*', 'Connection': 'keep-alive', 'Host': 'glacial-earth-31542.herokuapp.com', 'Origin': 'https://glacial-earth-31542.herokuapp.com', 'Content-Type': 'application/json', 'Sec-Fetch-Dest': 'empty', 'X-Requested-With': 'XMLHttpRequest', 'X-CSRFTOKEN': '5cLs1tbLS7a3xEEbwKWq8NkcWu585U26OZi9Ce3h6p5edoM3fbpdpiqmynhUQwfW', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x'} 
data={"title": "Posting 2", "content": "Posting 2 content"} 
json=None</msg>
<msg timestamp="20200317 16:33:14.477" level="INFO">${POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:13.966" endtime="20200317 16:33:14.477"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${POST_RESPONSE}</arg>
</arguments>
<msg timestamp="20200317 16:33:14.477" level="INFO">${POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:14.477" endtime="20200317 16:33:14.477"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.966" endtime="20200317 16:33:14.477"></status>
</kw>
<kw name="Verify Post Request Success">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200317 16:33:14.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:14.478" endtime="20200317 16:33:14.478"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:14.478" endtime="20200317 16:33:14.479"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.966" endtime="20200317 16:33:14.479"></status>
</kw>
<kw name="${p} = {'title': 'Posting 3', 'content': 'Posting 3 content'}" type="foritem">
<kw name="Create Posting">
<arguments>
<arg>posting=${p}</arg>
</arguments>
<kw name="Make Post Request" library="AdminUser">
<arguments>
<arg>posting=${posting}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:14.484" level="INFO">POST Request using : uri=/api/postings/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'text/html; q=1.0, */*', 'Connection': 'keep-alive', 'Host': 'glacial-earth-31542.herokuapp.com', 'Origin': 'https://glacial-earth-31542.herokuapp.com', 'Content-Type': 'application/json', 'Sec-Fetch-Dest': 'empty', 'X-Requested-With': 'XMLHttpRequest', 'X-CSRFTOKEN': '5cLs1tbLS7a3xEEbwKWq8NkcWu585U26OZi9Ce3h6p5edoM3fbpdpiqmynhUQwfW', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x'} 
data={"title": "Posting 3", "content": "Posting 3 content"} 
json=None</msg>
<msg timestamp="20200317 16:33:14.886" level="INFO">${POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:14.483" endtime="20200317 16:33:14.886"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${POST_RESPONSE}</arg>
</arguments>
<msg timestamp="20200317 16:33:14.886" level="INFO">${POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:14.886" endtime="20200317 16:33:14.886"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:14.479" endtime="20200317 16:33:14.886"></status>
</kw>
<kw name="Verify Post Request Success">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200317 16:33:14.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:14.887" endtime="20200317 16:33:14.888"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:14.887" endtime="20200317 16:33:14.895"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:14.479" endtime="20200317 16:33:14.895"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.361" endtime="20200317 16:33:14.895"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:13.361" endtime="20200317 16:33:14.896"></status>
</kw>
<kw name="Read &quot;Registered Postings&quot;">
<kw name="Make Get Request" library="AdminUser">
<assign>
<var>${GET_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:14.896" level="INFO">GET Request using : uri=/api/postings/, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x', 'Host': 'glacial-earth-31542.herokuapp.com', 'Cache-Control': 'max-age=0', 'Upgrade-Insecure-Requests': '1', 'Sec-Fetch-Dest': 'document', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8'} 
data=None 
json=None</msg>
<msg timestamp="20200317 16:33:15.096" level="INFO">${GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:14.896" endtime="20200317 16:33:15.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200317 16:33:15.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:15.096" endtime="20200317 16:33:15.098"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${GET_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>@{registered_postings}</var>
</assign>
<msg timestamp="20200317 16:33:15.102" level="INFO">@{registered_postings} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'Posting 1 content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'} | ...</msg>
<status status="PASS" starttime="20200317 16:33:15.098" endtime="20200317 16:33:15.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{REGISTERED_POSTINGS}</arg>
<arg>@{registered_postings}</arg>
</arguments>
<msg timestamp="20200317 16:33:15.108" level="INFO">@{REGISTERED_POSTINGS} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'Posting 1 content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'} | ...</msg>
<status status="PASS" starttime="20200317 16:33:15.102" endtime="20200317 16:33:15.108"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:14.896" endtime="20200317 16:33:15.108"></status>
</kw>
<kw name="Verify &quot;Registered Postings&quot; Against Posting Spec">
<kw name="Verify All Postings" library="Utilities">
<doc>:param postings_to_verify: a list of postings, where each posting needs to be verified against posting_spec
:param posting_spec: a dict containing keys, which map to posting fields
:return: None</doc>
<arguments>
<arg>postings_to_verify=${REGISTERED_POSTINGS}</arg>
<arg>posting_spec=${POSTING_SPEC}</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.109" endtime="20200317 16:33:15.110"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.109" endtime="20200317 16:33:15.110"></status>
</kw>
<kw name="Verify &quot;Additional Postings&quot; Created">
<kw name="${expected_posting} IN [ @{POSTINGS_TO_CREATE} ]" type="for">
<kw name="${expected_posting} = {'title': 'Posting 1', 'content': 'Posting 1 content'}" type="foritem">
<kw name="Is Match">
<doc>Note that registered_postings is a list of postings, which are dictionaries.
Each posting in registered postings have 'title' &amp; 'content' keys.
expected_posting is a dictionary with keys 'title' and 'content' as well.
For each posting in registered_postings, we try to find a match its title &amp; its content
to that of expected_posting's title &amp; content respectively. If such a match occurs,
we return True, otherwise we return false</doc>
<arguments>
<arg>expected_posting=${expected_posting}</arg>
<arg>registered_postings=${REGISTERED_POSTINGS}</arg>
</arguments>
<assign>
<var>${is_match}</var>
<var>${matched_posting}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.116" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.116" endtime="20200317 16:33:15.116"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.117" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.116" endtime="20200317 16:33:15.117"></status>
</kw>
<kw name="${rp} IN [ @{registered_postings} ]" type="for">
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'Posting 1 content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.131" level="INFO">${is_match} = True</msg>
<status status="PASS" starttime="20200317 16:33:15.117" endtime="20200317 16:33:15.131"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.133" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'Posting 1 content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:15.131" endtime="20200317 16:33:15.133"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<msg timestamp="20200317 16:33:15.134" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200317 16:33:15.133" endtime="20200317 16:33:15.134"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.117" endtime="20200317 16:33:15.134"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.117" endtime="20200317 16:33:15.134"></status>
</kw>
<msg timestamp="20200317 16:33:15.134" level="INFO">${is_match} = True</msg>
<msg timestamp="20200317 16:33:15.134" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'Posting 1 content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:15.115" endtime="20200317 16:33:15.134"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.139" endtime="20200317 16:33:15.140"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.111" endtime="20200317 16:33:15.140"></status>
</kw>
<kw name="${expected_posting} = {'title': 'Posting 2', 'content': 'Posting 2 content'}" type="foritem">
<kw name="Is Match">
<doc>Note that registered_postings is a list of postings, which are dictionaries.
Each posting in registered postings have 'title' &amp; 'content' keys.
expected_posting is a dictionary with keys 'title' and 'content' as well.
For each posting in registered_postings, we try to find a match its title &amp; its content
to that of expected_posting's title &amp; content respectively. If such a match occurs,
we return True, otherwise we return false</doc>
<arguments>
<arg>expected_posting=${expected_posting}</arg>
<arg>registered_postings=${REGISTERED_POSTINGS}</arg>
</arguments>
<assign>
<var>${is_match}</var>
<var>${matched_posting}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.141" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.141" endtime="20200317 16:33:15.141"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.142" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.142" endtime="20200317 16:33:15.142"></status>
</kw>
<kw name="${rp} IN [ @{registered_postings} ]" type="for">
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'Posting 1 content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.146" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.142" endtime="20200317 16:33:15.147"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.148" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.147" endtime="20200317 16:33:15.148"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.148" endtime="20200317 16:33:15.149"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.142" endtime="20200317 16:33:15.149"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': &quot;My First Blog's content&quot;, 'timestamp': '2019-12-18T17:06:54.373451+02:..." type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.155" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.154" endtime="20200317 16:33:15.155"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.157" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.156" endtime="20200317 16:33:15.157"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.157" endtime="20200317 16:33:15.158"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.149" endtime="20200317 16:33:15.158"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'Posting 2 content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.164" level="INFO">${is_match} = True</msg>
<status status="PASS" starttime="20200317 16:33:15.158" endtime="20200317 16:33:15.164"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.165" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'Posting 2 content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:15.164" endtime="20200317 16:33:15.165"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<msg timestamp="20200317 16:33:15.167" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200317 16:33:15.166" endtime="20200317 16:33:15.167"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.158" endtime="20200317 16:33:15.167"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.142" endtime="20200317 16:33:15.167"></status>
</kw>
<msg timestamp="20200317 16:33:15.171" level="INFO">${is_match} = True</msg>
<msg timestamp="20200317 16:33:15.171" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'Posting 2 content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:15.141" endtime="20200317 16:33:15.171"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.172" endtime="20200317 16:33:15.173"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.140" endtime="20200317 16:33:15.173"></status>
</kw>
<kw name="${expected_posting} = {'title': 'Posting 3', 'content': 'Posting 3 content'}" type="foritem">
<kw name="Is Match">
<doc>Note that registered_postings is a list of postings, which are dictionaries.
Each posting in registered postings have 'title' &amp; 'content' keys.
expected_posting is a dictionary with keys 'title' and 'content' as well.
For each posting in registered_postings, we try to find a match its title &amp; its content
to that of expected_posting's title &amp; content respectively. If such a match occurs,
we return True, otherwise we return false</doc>
<arguments>
<arg>expected_posting=${expected_posting}</arg>
<arg>registered_postings=${REGISTERED_POSTINGS}</arg>
</arguments>
<assign>
<var>${is_match}</var>
<var>${matched_posting}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.174" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.174" endtime="20200317 16:33:15.174"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.174" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.174" endtime="20200317 16:33:15.174"></status>
</kw>
<kw name="${rp} IN [ @{registered_postings} ]" type="for">
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'Posting 1 content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.176" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.175" endtime="20200317 16:33:15.176"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.177" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.176" endtime="20200317 16:33:15.177"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.177" endtime="20200317 16:33:15.178"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.175" endtime="20200317 16:33:15.178"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': &quot;My First Blog's content&quot;, 'timestamp': '2019-12-18T17:06:54.373451+02:..." type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.186" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.178" endtime="20200317 16:33:15.186"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.188" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.187" endtime="20200317 16:33:15.188"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.188" endtime="20200317 16:33:15.189"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.178" endtime="20200317 16:33:15.189"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'Posting 2 content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.190" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.189" endtime="20200317 16:33:15.190"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.199" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.190" endtime="20200317 16:33:15.199"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.199" endtime="20200317 16:33:15.200"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.189" endtime="20200317 16:33:15.200"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'Posting 3 content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.202" level="INFO">${is_match} = True</msg>
<status status="PASS" starttime="20200317 16:33:15.201" endtime="20200317 16:33:15.202"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.207" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'Posting 3 content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:15.202" endtime="20200317 16:33:15.207"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<msg timestamp="20200317 16:33:15.210" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200317 16:33:15.207" endtime="20200317 16:33:15.210"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.200" endtime="20200317 16:33:15.210"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.175" endtime="20200317 16:33:15.210"></status>
</kw>
<msg timestamp="20200317 16:33:15.210" level="INFO">${is_match} = True</msg>
<msg timestamp="20200317 16:33:15.210" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'Posting 3 content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:15.173" endtime="20200317 16:33:15.210"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.211" endtime="20200317 16:33:15.214"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.173" endtime="20200317 16:33:15.214"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.111" endtime="20200317 16:33:15.214"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.110" endtime="20200317 16:33:15.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{POSTINGS_TO_MODIFY}</arg>
<arg>@{POSTINGS_TO_CREATE}</arg>
</arguments>
<msg timestamp="20200317 16:33:15.215" level="INFO">@{POSTINGS_TO_MODIFY} = [ {'title': 'Posting 1', 'content': 'Posting 1 content'} | {'title': 'Posting 2', 'content': 'Posting 2 content'} | {'title': 'Posting 3', 'content': 'Posting 3 content'} ]</msg>
<status status="PASS" starttime="20200317 16:33:15.214" endtime="20200317 16:33:15.215"></status>
</kw>
<tags>
<tag>CRUD-operations-as-admin</tag>
</tags>
<status status="PASS" starttime="20200317 16:33:13.360" endtime="20200317 16:33:15.219" critical="yes"></status>
</test>
<test id="s1-t4" name="Test Modifying The Contents Of &quot;Additional Postings&quot;">
<kw name="Modify The Contents Of &quot;Additional Postings&quot;">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{expected_modified_postings}</var>
</assign>
<msg timestamp="20200317 16:33:15.221" level="INFO">@{expected_modified_postings} = [ ]</msg>
<status status="PASS" starttime="20200317 16:33:15.221" endtime="20200317 16:33:15.221"></status>
</kw>
<kw name="${ptm} IN [ @{POSTINGS_TO_MODIFY} ]" type="for">
<kw name="${ptm} = {'title': 'Posting 1', 'content': 'Posting 1 content'}" type="foritem">
<kw name="Is Match">
<doc>Note that registered_postings is a list of postings, which are dictionaries.
Each posting in registered postings have 'title' &amp; 'content' keys.
expected_posting is a dictionary with keys 'title' and 'content' as well.
For each posting in registered_postings, we try to find a match its title &amp; its content
to that of expected_posting's title &amp; content respectively. If such a match occurs,
we return True, otherwise we return false</doc>
<arguments>
<arg>expected_posting=${ptm}</arg>
<arg>registered_postings=${REGISTERED_POSTINGS}</arg>
</arguments>
<assign>
<var>${is_match}</var>
<var>${registered_posting}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.222" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.222" endtime="20200317 16:33:15.222"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.223" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.223" endtime="20200317 16:33:15.223"></status>
</kw>
<kw name="${rp} IN [ @{registered_postings} ]" type="for">
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'Posting 1 content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.224" level="INFO">${is_match} = True</msg>
<status status="PASS" starttime="20200317 16:33:15.223" endtime="20200317 16:33:15.225"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.233" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'Posting 1 content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:15.225" endtime="20200317 16:33:15.233"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<msg timestamp="20200317 16:33:15.234" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200317 16:33:15.233" endtime="20200317 16:33:15.235"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.223" endtime="20200317 16:33:15.235"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.223" endtime="20200317 16:33:15.235"></status>
</kw>
<msg timestamp="20200317 16:33:15.235" level="INFO">${is_match} = True</msg>
<msg timestamp="20200317 16:33:15.235" level="INFO">${registered_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'Posting 1 content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:15.222" endtime="20200317 16:33:15.235"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.235" endtime="20200317 16:33:15.236"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>dictionary=${registered_posting}</arg>
<arg>content=modified content</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.236" endtime="20200317 16:33:15.237"></status>
</kw>
<kw name="Update Posting">
<arguments>
<arg>posting=${registered_posting}</arg>
</arguments>
<kw name="Make Put Request" library="AdminUser">
<arguments>
<arg>posting=${posting}</arg>
</arguments>
<assign>
<var>${PUT_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:15.238" level="INFO">PUT Request using : uri=/api/postings/213/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'text/html; q=1.0, */*', 'Connection': 'keep-alive', 'Host': 'glacial-earth-31542.herokuapp.com', 'Origin': 'https://glacial-earth-31542.herokuapp.com', 'Content-Type': 'application/json', 'Sec-Fetch-Dest': 'empty', 'X-Requested-With': 'XMLHttpRequest', 'X-CSRFTOKEN': '5cLs1tbLS7a3xEEbwKWq8NkcWu585U26OZi9Ce3h6p5edoM3fbpdpiqmynhUQwfW', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x'} 
data={"url": "https://glacial-earth-31542.herokuapp.com/api/postings/213/", "id": 213, "user": 1, "title": "Posting 1", "content": "modified content", "timestamp": "2020-03-17T16:33:13.552044+02:00"} 
json=None</msg>
<msg timestamp="20200317 16:33:15.705" level="INFO">${PUT_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:15.237" endtime="20200317 16:33:15.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PUT_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200317 16:33:15.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:15.706" endtime="20200317 16:33:15.706"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.237" endtime="20200317 16:33:15.711"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${expected_modified_postings}</arg>
<arg>${registered_posting}</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.712" endtime="20200317 16:33:15.712"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.221" endtime="20200317 16:33:15.712"></status>
</kw>
<kw name="${ptm} = {'title': 'Posting 2', 'content': 'Posting 2 content'}" type="foritem">
<kw name="Is Match">
<doc>Note that registered_postings is a list of postings, which are dictionaries.
Each posting in registered postings have 'title' &amp; 'content' keys.
expected_posting is a dictionary with keys 'title' and 'content' as well.
For each posting in registered_postings, we try to find a match its title &amp; its content
to that of expected_posting's title &amp; content respectively. If such a match occurs,
we return True, otherwise we return false</doc>
<arguments>
<arg>expected_posting=${ptm}</arg>
<arg>registered_postings=${REGISTERED_POSTINGS}</arg>
</arguments>
<assign>
<var>${is_match}</var>
<var>${registered_posting}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.713" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.713" endtime="20200317 16:33:15.713"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.714" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.714" endtime="20200317 16:33:15.714"></status>
</kw>
<kw name="${rp} IN [ @{registered_postings} ]" type="for">
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.717" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.715" endtime="20200317 16:33:15.717"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.725" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.723" endtime="20200317 16:33:15.725"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.725" endtime="20200317 16:33:15.727"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.715" endtime="20200317 16:33:15.727"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': &quot;My First Blog's content&quot;, 'timestamp': '2019-12-18T17:06:54.373451+02:..." type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.729" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:15.727" endtime="20200317 16:33:15.729"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.735" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:15.730" endtime="20200317 16:33:15.735"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.735" endtime="20200317 16:33:15.738"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.727" endtime="20200317 16:33:15.738"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'Posting 2 content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:15.749" level="INFO">${is_match} = True</msg>
<status status="PASS" starttime="20200317 16:33:15.738" endtime="20200317 16:33:15.749"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:15.751" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'Posting 2 content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:15.750" endtime="20200317 16:33:15.751"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<msg timestamp="20200317 16:33:15.753" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200317 16:33:15.752" endtime="20200317 16:33:15.753"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.738" endtime="20200317 16:33:15.753"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.714" endtime="20200317 16:33:15.753"></status>
</kw>
<msg timestamp="20200317 16:33:15.754" level="INFO">${is_match} = True</msg>
<msg timestamp="20200317 16:33:15.754" level="INFO">${registered_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'Posting 2 content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:15.712" endtime="20200317 16:33:15.754"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.754" endtime="20200317 16:33:15.760"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>dictionary=${registered_posting}</arg>
<arg>content=modified content</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:15.760" endtime="20200317 16:33:15.761"></status>
</kw>
<kw name="Update Posting">
<arguments>
<arg>posting=${registered_posting}</arg>
</arguments>
<kw name="Make Put Request" library="AdminUser">
<arguments>
<arg>posting=${posting}</arg>
</arguments>
<assign>
<var>${PUT_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:15.768" level="INFO">PUT Request using : uri=/api/postings/214/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'text/html; q=1.0, */*', 'Connection': 'keep-alive', 'Host': 'glacial-earth-31542.herokuapp.com', 'Origin': 'https://glacial-earth-31542.herokuapp.com', 'Content-Type': 'application/json', 'Sec-Fetch-Dest': 'empty', 'X-Requested-With': 'XMLHttpRequest', 'X-CSRFTOKEN': '5cLs1tbLS7a3xEEbwKWq8NkcWu585U26OZi9Ce3h6p5edoM3fbpdpiqmynhUQwfW', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x'} 
data={"url": "https://glacial-earth-31542.herokuapp.com/api/postings/214/", "id": 214, "user": 1, "title": "Posting 2", "content": "modified content", "timestamp": "2020-03-17T16:33:14.219145+02:00"} 
json=None</msg>
<msg timestamp="20200317 16:33:16.097" level="INFO">${PUT_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:15.762" endtime="20200317 16:33:16.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PUT_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200317 16:33:16.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:16.097" endtime="20200317 16:33:16.098"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.761" endtime="20200317 16:33:16.098"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${expected_modified_postings}</arg>
<arg>${registered_posting}</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.098" endtime="20200317 16:33:16.098"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.712" endtime="20200317 16:33:16.098"></status>
</kw>
<kw name="${ptm} = {'title': 'Posting 3', 'content': 'Posting 3 content'}" type="foritem">
<kw name="Is Match">
<doc>Note that registered_postings is a list of postings, which are dictionaries.
Each posting in registered postings have 'title' &amp; 'content' keys.
expected_posting is a dictionary with keys 'title' and 'content' as well.
For each posting in registered_postings, we try to find a match its title &amp; its content
to that of expected_posting's title &amp; content respectively. If such a match occurs,
we return True, otherwise we return false</doc>
<arguments>
<arg>expected_posting=${ptm}</arg>
<arg>registered_postings=${REGISTERED_POSTINGS}</arg>
</arguments>
<assign>
<var>${is_match}</var>
<var>${registered_posting}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.101" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.101" endtime="20200317 16:33:16.101"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.102" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.101" endtime="20200317 16:33:16.102"></status>
</kw>
<kw name="${rp} IN [ @{registered_postings} ]" type="for">
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.103" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.102" endtime="20200317 16:33:16.103"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.112" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.103" endtime="20200317 16:33:16.112"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.112" endtime="20200317 16:33:16.113"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.102" endtime="20200317 16:33:16.113"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': &quot;My First Blog's content&quot;, 'timestamp': '2019-12-18T17:06:54.373451+02:..." type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.115" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.113" endtime="20200317 16:33:16.115"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.116" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.115" endtime="20200317 16:33:16.116"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.116" endtime="20200317 16:33:16.117"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.113" endtime="20200317 16:33:16.117"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.118" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.117" endtime="20200317 16:33:16.118"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.123" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.118" endtime="20200317 16:33:16.123"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.124" endtime="20200317 16:33:16.125"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.117" endtime="20200317 16:33:16.125"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'Posting 3 content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.127" level="INFO">${is_match} = True</msg>
<status status="PASS" starttime="20200317 16:33:16.125" endtime="20200317 16:33:16.127"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.132" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'Posting 3 content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:16.131" endtime="20200317 16:33:16.132"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<msg timestamp="20200317 16:33:16.133" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200317 16:33:16.132" endtime="20200317 16:33:16.133"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.125" endtime="20200317 16:33:16.133"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.102" endtime="20200317 16:33:16.133"></status>
</kw>
<msg timestamp="20200317 16:33:16.134" level="INFO">${is_match} = True</msg>
<msg timestamp="20200317 16:33:16.134" level="INFO">${registered_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'Posting 3 content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:16.098" endtime="20200317 16:33:16.134"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.134" endtime="20200317 16:33:16.140"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>dictionary=${registered_posting}</arg>
<arg>content=modified content</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.140" endtime="20200317 16:33:16.141"></status>
</kw>
<kw name="Update Posting">
<arguments>
<arg>posting=${registered_posting}</arg>
</arguments>
<kw name="Make Put Request" library="AdminUser">
<arguments>
<arg>posting=${posting}</arg>
</arguments>
<assign>
<var>${PUT_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:16.142" level="INFO">PUT Request using : uri=/api/postings/215/, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'text/html; q=1.0, */*', 'Connection': 'keep-alive', 'Host': 'glacial-earth-31542.herokuapp.com', 'Origin': 'https://glacial-earth-31542.herokuapp.com', 'Content-Type': 'application/json', 'Sec-Fetch-Dest': 'empty', 'X-Requested-With': 'XMLHttpRequest', 'X-CSRFTOKEN': '5cLs1tbLS7a3xEEbwKWq8NkcWu585U26OZi9Ce3h6p5edoM3fbpdpiqmynhUQwfW', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x'} 
data={"url": "https://glacial-earth-31542.herokuapp.com/api/postings/215/", "id": 215, "user": 1, "title": "Posting 3", "content": "modified content", "timestamp": "2020-03-17T16:33:14.660186+02:00"} 
json=None</msg>
<msg timestamp="20200317 16:33:16.393" level="INFO">${PUT_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:16.141" endtime="20200317 16:33:16.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PUT_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200317 16:33:16.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:16.394" endtime="20200317 16:33:16.394"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.141" endtime="20200317 16:33:16.394"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${expected_modified_postings}</arg>
<arg>${registered_posting}</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.394" endtime="20200317 16:33:16.395"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.098" endtime="20200317 16:33:16.395"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.221" endtime="20200317 16:33:16.395"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>@{EXPECTED_MODIFIED_POSTINGS}</arg>
<arg>@{expected_modified_postings}</arg>
</arguments>
<msg timestamp="20200317 16:33:16.395" level="INFO">@{EXPECTED_MODIFIED_POSTINGS} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'} | {...</msg>
<status status="PASS" starttime="20200317 16:33:16.395" endtime="20200317 16:33:16.396"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:15.220" endtime="20200317 16:33:16.396"></status>
</kw>
<kw name="Read &quot;Registered Postings&quot;">
<kw name="Make Get Request" library="AdminUser">
<assign>
<var>${GET_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:16.404" level="INFO">GET Request using : uri=/api/postings/, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x', 'Host': 'glacial-earth-31542.herokuapp.com', 'Cache-Control': 'max-age=0', 'Upgrade-Insecure-Requests': '1', 'Sec-Fetch-Dest': 'document', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8'} 
data=None 
json=None</msg>
<msg timestamp="20200317 16:33:16.585" level="INFO">${GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:16.403" endtime="20200317 16:33:16.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200317 16:33:16.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:16.585" endtime="20200317 16:33:16.587"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${GET_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>@{registered_postings}</var>
</assign>
<msg timestamp="20200317 16:33:16.588" level="INFO">@{registered_postings} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': "My First Blog's content", 'timestamp': '2019-12-18T17:06:54.373451+0...</msg>
<status status="PASS" starttime="20200317 16:33:16.587" endtime="20200317 16:33:16.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{REGISTERED_POSTINGS}</arg>
<arg>@{registered_postings}</arg>
</arguments>
<msg timestamp="20200317 16:33:16.589" level="INFO">@{REGISTERED_POSTINGS} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': "My First Blog's content", 'timestamp': '2019-12-18T17:06:54.373451+0...</msg>
<status status="PASS" starttime="20200317 16:33:16.588" endtime="20200317 16:33:16.589"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.403" endtime="20200317 16:33:16.589"></status>
</kw>
<kw name="Verify &quot;Registered Postings&quot; Against Posting Spec">
<kw name="Verify All Postings" library="Utilities">
<doc>:param postings_to_verify: a list of postings, where each posting needs to be verified against posting_spec
:param posting_spec: a dict containing keys, which map to posting fields
:return: None</doc>
<arguments>
<arg>postings_to_verify=${REGISTERED_POSTINGS}</arg>
<arg>posting_spec=${POSTING_SPEC}</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.594" endtime="20200317 16:33:16.594"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.593" endtime="20200317 16:33:16.595"></status>
</kw>
<kw name="Verify &quot;Additional Postings&quot; Modified">
<kw name="${emp} IN [ @{EXPECTED_MODIFIED_POSTINGS} ]" type="for">
<kw name="${emp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Is Match">
<doc>Note that registered_postings is a list of postings, which are dictionaries.
Each posting in registered postings have 'title' &amp; 'content' keys.
expected_posting is a dictionary with keys 'title' and 'content' as well.
For each posting in registered_postings, we try to find a match its title &amp; its content
to that of expected_posting's title &amp; content respectively. If such a match occurs,
we return True, otherwise we return false</doc>
<arguments>
<arg>expected_posting=${emp}</arg>
<arg>registered_postings=${registered_postings}</arg>
</arguments>
<assign>
<var>${is_match}</var>
<var>${matched_posting}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.602" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.601" endtime="20200317 16:33:16.602"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.602" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.602" endtime="20200317 16:33:16.602"></status>
</kw>
<kw name="${rp} IN [ @{registered_postings} ]" type="for">
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': &quot;My First Blog's content&quot;, 'timestamp': '2019-12-18T17:06:54.373451+02:..." type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.604" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.603" endtime="20200317 16:33:16.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.606" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.605" endtime="20200317 16:33:16.606"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.606" endtime="20200317 16:33:16.607"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.603" endtime="20200317 16:33:16.607"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.612" level="INFO">${is_match} = True</msg>
<status status="PASS" starttime="20200317 16:33:16.611" endtime="20200317 16:33:16.612"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.614" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:16.613" endtime="20200317 16:33:16.614"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<msg timestamp="20200317 16:33:16.615" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200317 16:33:16.614" endtime="20200317 16:33:16.615"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.611" endtime="20200317 16:33:16.615"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.602" endtime="20200317 16:33:16.615"></status>
</kw>
<msg timestamp="20200317 16:33:16.623" level="INFO">${is_match} = True</msg>
<msg timestamp="20200317 16:33:16.623" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:16.601" endtime="20200317 16:33:16.623"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.624" endtime="20200317 16:33:16.625"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.600" endtime="20200317 16:33:16.625"></status>
</kw>
<kw name="${emp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}" type="foritem">
<kw name="Is Match">
<doc>Note that registered_postings is a list of postings, which are dictionaries.
Each posting in registered postings have 'title' &amp; 'content' keys.
expected_posting is a dictionary with keys 'title' and 'content' as well.
For each posting in registered_postings, we try to find a match its title &amp; its content
to that of expected_posting's title &amp; content respectively. If such a match occurs,
we return True, otherwise we return false</doc>
<arguments>
<arg>expected_posting=${emp}</arg>
<arg>registered_postings=${registered_postings}</arg>
</arguments>
<assign>
<var>${is_match}</var>
<var>${matched_posting}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.626" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.626" endtime="20200317 16:33:16.626"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.626" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.626" endtime="20200317 16:33:16.626"></status>
</kw>
<kw name="${rp} IN [ @{registered_postings} ]" type="for">
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': &quot;My First Blog's content&quot;, 'timestamp': '2019-12-18T17:06:54.373451+02:..." type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.628" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.627" endtime="20200317 16:33:16.628"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.629" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.628" endtime="20200317 16:33:16.629"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.629" endtime="20200317 16:33:16.635"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.627" endtime="20200317 16:33:16.635"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.637" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.635" endtime="20200317 16:33:16.637"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.638" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.637" endtime="20200317 16:33:16.638"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.638" endtime="20200317 16:33:16.643"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.635" endtime="20200317 16:33:16.643"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.644" level="INFO">${is_match} = True</msg>
<status status="PASS" starttime="20200317 16:33:16.643" endtime="20200317 16:33:16.644"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.645" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:16.644" endtime="20200317 16:33:16.645"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<msg timestamp="20200317 16:33:16.647" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200317 16:33:16.646" endtime="20200317 16:33:16.647"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.643" endtime="20200317 16:33:16.651"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.626" endtime="20200317 16:33:16.651"></status>
</kw>
<msg timestamp="20200317 16:33:16.652" level="INFO">${is_match} = True</msg>
<msg timestamp="20200317 16:33:16.652" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:16.625" endtime="20200317 16:33:16.652"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.652" endtime="20200317 16:33:16.653"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.625" endtime="20200317 16:33:16.653"></status>
</kw>
<kw name="${emp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}" type="foritem">
<kw name="Is Match">
<doc>Note that registered_postings is a list of postings, which are dictionaries.
Each posting in registered postings have 'title' &amp; 'content' keys.
expected_posting is a dictionary with keys 'title' and 'content' as well.
For each posting in registered_postings, we try to find a match its title &amp; its content
to that of expected_posting's title &amp; content respectively. If such a match occurs,
we return True, otherwise we return false</doc>
<arguments>
<arg>expected_posting=${emp}</arg>
<arg>registered_postings=${registered_postings}</arg>
</arguments>
<assign>
<var>${is_match}</var>
<var>${matched_posting}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${False}</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.656" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.656" endtime="20200317 16:33:16.656"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.657" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.657" endtime="20200317 16:33:16.657"></status>
</kw>
<kw name="${rp} IN [ @{registered_postings} ]" type="for">
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': &quot;My First Blog's content&quot;, 'timestamp': '2019-12-18T17:06:54.373451+02:..." type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.658" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.657" endtime="20200317 16:33:16.659"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.663" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.659" endtime="20200317 16:33:16.663"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.663" endtime="20200317 16:33:16.664"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.657" endtime="20200317 16:33:16.664"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.665" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.664" endtime="20200317 16:33:16.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.667" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.666" endtime="20200317 16:33:16.671"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.671" endtime="20200317 16:33:16.672"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.664" endtime="20200317 16:33:16.672"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.673" level="INFO">${is_match} = False</msg>
<status status="PASS" starttime="20200317 16:33:16.672" endtime="20200317 16:33:16.674"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.675" level="INFO">${matched_posting} = None</msg>
<status status="PASS" starttime="20200317 16:33:16.674" endtime="20200317 16:33:16.675"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.675" endtime="20200317 16:33:16.680"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.672" endtime="20200317 16:33:16.680"></status>
</kw>
<kw name="${rp} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$rp['title']==$expected_posting['title'] and $rp['content']==$expected_posting['content']</arg>
</arguments>
<assign>
<var>${is_match}</var>
</assign>
<msg timestamp="20200317 16:33:16.681" level="INFO">${is_match} = True</msg>
<status status="PASS" starttime="20200317 16:33:16.680" endtime="20200317 16:33:16.681"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>$is_match</arg>
<arg>${rp}</arg>
<arg>${None}</arg>
</arguments>
<assign>
<var>${matched_posting}</var>
</assign>
<msg timestamp="20200317 16:33:16.682" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:16.681" endtime="20200317 16:33:16.682"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<msg timestamp="20200317 16:33:16.683" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200317 16:33:16.682" endtime="20200317 16:33:16.683"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.680" endtime="20200317 16:33:16.687"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.657" endtime="20200317 16:33:16.687"></status>
</kw>
<msg timestamp="20200317 16:33:16.687" level="INFO">${is_match} = True</msg>
<msg timestamp="20200317 16:33:16.687" level="INFO">${matched_posting} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}</msg>
<status status="PASS" starttime="20200317 16:33:16.653" endtime="20200317 16:33:16.687"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$is_match</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:16.688" endtime="20200317 16:33:16.689"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.653" endtime="20200317 16:33:16.689"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.600" endtime="20200317 16:33:16.693"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.599" endtime="20200317 16:33:16.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{POSTINGS_TO_DELETE}</arg>
<arg>@{EXPECTED_MODIFIED_POSTINGS}</arg>
</arguments>
<msg timestamp="20200317 16:33:16.694" level="INFO">@{POSTINGS_TO_DELETE} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'} | {...</msg>
<status status="PASS" starttime="20200317 16:33:16.694" endtime="20200317 16:33:16.695"></status>
</kw>
<tags>
<tag>CRUD-operations-as-admin</tag>
</tags>
<status status="PASS" starttime="20200317 16:33:15.219" endtime="20200317 16:33:16.695" critical="yes"></status>
</test>
<test id="s1-t5" name="Deleting &quot;Additional Postings&quot;">
<kw name="Delete &quot;Additional Postings&quot;">
<kw name="${ptd} IN [ @{POSTINGS_TO_DELETE} ]" type="for">
<kw name="${ptd} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'id': 213, 'user': 1, 'title': 'Posting 1', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:13.552044+02:00'}" type="foritem">
<kw name="Delete Posting">
<arguments>
<arg>posting=${ptd}</arg>
</arguments>
<kw name="Make Delete Request" library="AdminUser">
<arguments>
<arg>posting=${posting}</arg>
</arguments>
<assign>
<var>${DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:16.700" level="INFO">DELETE Request using : uri=/api/postings/213/, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'text/html; q=1.0, */*', 'Connection': 'keep-alive', 'Host': 'glacial-earth-31542.herokuapp.com', 'Origin': 'https://glacial-earth-31542.herokuapp.com', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Sec-Fetch-Dest': 'empty', 'X-Requested-With': 'XMLHttpRequest', 'X-CSRFTOKEN': '5cLs1tbLS7a3xEEbwKWq8NkcWu585U26OZi9Ce3h6p5edoM3fbpdpiqmynhUQwfW', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/213/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x'} 
data=url=https%3A%2F%2Fglacial-earth-31542.herokuapp.com%2Fapi%2Fpostings%2F213%2F&amp;id=213&amp;user=1&amp;title=Posting+1&amp;content=modified+content&amp;timestamp=2020-03-17T16%3A33%3A13.552044%2B02%3A00 
json=None</msg>
<msg timestamp="20200317 16:33:16.920" level="INFO">${DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:16.700" endtime="20200317 16:33:16.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200317 16:33:16.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:16.920" endtime="20200317 16:33:16.921"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.699" endtime="20200317 16:33:16.921"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.699" endtime="20200317 16:33:16.921"></status>
</kw>
<kw name="${ptd} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'id': 214, 'user': 1, 'title': 'Posting 2', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.219145+02:00'}" type="foritem">
<kw name="Delete Posting">
<arguments>
<arg>posting=${ptd}</arg>
</arguments>
<kw name="Make Delete Request" library="AdminUser">
<arguments>
<arg>posting=${posting}</arg>
</arguments>
<assign>
<var>${DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:16.922" level="INFO">DELETE Request using : uri=/api/postings/214/, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'text/html; q=1.0, */*', 'Connection': 'keep-alive', 'Host': 'glacial-earth-31542.herokuapp.com', 'Origin': 'https://glacial-earth-31542.herokuapp.com', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Sec-Fetch-Dest': 'empty', 'X-Requested-With': 'XMLHttpRequest', 'X-CSRFTOKEN': '5cLs1tbLS7a3xEEbwKWq8NkcWu585U26OZi9Ce3h6p5edoM3fbpdpiqmynhUQwfW', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/214/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x'} 
data=url=https%3A%2F%2Fglacial-earth-31542.herokuapp.com%2Fapi%2Fpostings%2F214%2F&amp;id=214&amp;user=1&amp;title=Posting+2&amp;content=modified+content&amp;timestamp=2020-03-17T16%3A33%3A14.219145%2B02%3A00 
json=None</msg>
<msg timestamp="20200317 16:33:17.198" level="INFO">${DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:16.922" endtime="20200317 16:33:17.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200317 16:33:17.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:17.199" endtime="20200317 16:33:17.199"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.921" endtime="20200317 16:33:17.199"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.921" endtime="20200317 16:33:17.201"></status>
</kw>
<kw name="${ptd} = {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'id': 215, 'user': 1, 'title': 'Posting 3', 'content': 'modified content', 'timestamp': '2020-03-17T16:33:14.660186+02:00'}" type="foritem">
<kw name="Delete Posting">
<arguments>
<arg>posting=${ptd}</arg>
</arguments>
<kw name="Make Delete Request" library="AdminUser">
<arguments>
<arg>posting=${posting}</arg>
</arguments>
<assign>
<var>${DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:17.203" level="INFO">DELETE Request using : uri=/api/postings/215/, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'text/html; q=1.0, */*', 'Connection': 'keep-alive', 'Host': 'glacial-earth-31542.herokuapp.com', 'Origin': 'https://glacial-earth-31542.herokuapp.com', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Sec-Fetch-Dest': 'empty', 'X-Requested-With': 'XMLHttpRequest', 'X-CSRFTOKEN': '5cLs1tbLS7a3xEEbwKWq8NkcWu585U26OZi9Ce3h6p5edoM3fbpdpiqmynhUQwfW', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/215/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x'} 
data=url=https%3A%2F%2Fglacial-earth-31542.herokuapp.com%2Fapi%2Fpostings%2F215%2F&amp;id=215&amp;user=1&amp;title=Posting+3&amp;content=modified+content&amp;timestamp=2020-03-17T16%3A33%3A14.660186%2B02%3A00 
json=None</msg>
<msg timestamp="20200317 16:33:17.751" level="INFO">${DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:17.202" endtime="20200317 16:33:17.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200317 16:33:17.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:17.751" endtime="20200317 16:33:17.752"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:17.202" endtime="20200317 16:33:17.752"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:17.201" endtime="20200317 16:33:17.752"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.699" endtime="20200317 16:33:17.752"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:16.699" endtime="20200317 16:33:17.752"></status>
</kw>
<kw name="Read &quot;Registered Postings&quot;">
<kw name="Make Get Request" library="AdminUser">
<assign>
<var>${GET_RESPONSE}</var>
</assign>
<msg timestamp="20200317 16:33:17.753" level="INFO">GET Request using : uri=/api/postings/, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) snap Chromium/80.0.3987.132 Chrome/80.0.3987.132 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Cookie': 'tabstyle=raw-tab; csrftoken=PEGpUJxFm7n1HZhkWTByL6J1YVg80jZKyrd6vupbApicnJpcFk4l2BPbAOsULVcA; sessionid=qn80bru50vcxk9r06tr9850w7v2de68x', 'Host': 'glacial-earth-31542.herokuapp.com', 'Cache-Control': 'max-age=0', 'Upgrade-Insecure-Requests': '1', 'Sec-Fetch-Dest': 'document', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Referer': 'https://glacial-earth-31542.herokuapp.com/api/postings/', 'Accept-Language': 'en-US,en;q=0.9,fi;q=0.8'} 
data=None 
json=None</msg>
<msg timestamp="20200317 16:33:17.958" level="INFO">${GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200317 16:33:17.753" endtime="20200317 16:33:17.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200317 16:33:17.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200317 16:33:17.958" endtime="20200317 16:33:17.959"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${GET_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>@{registered_postings}</var>
</assign>
<msg timestamp="20200317 16:33:17.959" level="INFO">@{registered_postings} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': "My First Blog's content", 'timestamp': '2019-12-18T17:06:54.373451+0...</msg>
<status status="PASS" starttime="20200317 16:33:17.959" endtime="20200317 16:33:17.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{REGISTERED_POSTINGS}</arg>
<arg>@{registered_postings}</arg>
</arguments>
<msg timestamp="20200317 16:33:17.960" level="INFO">@{REGISTERED_POSTINGS} = [ {'url': 'https://glacial-earth-31542.herokuapp.com/api/postings/1/', 'id': 1, 'user': 1, 'title': 'My First Posting', 'content': "My First Blog's content", 'timestamp': '2019-12-18T17:06:54.373451+0...</msg>
<status status="PASS" starttime="20200317 16:33:17.960" endtime="20200317 16:33:17.960"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:17.752" endtime="20200317 16:33:17.960"></status>
</kw>
<kw name="Verify &quot;Registered Postings&quot; Against Posting Spec">
<kw name="Verify All Postings" library="Utilities">
<doc>:param postings_to_verify: a list of postings, where each posting needs to be verified against posting_spec
:param posting_spec: a dict containing keys, which map to posting fields
:return: None</doc>
<arguments>
<arg>postings_to_verify=${REGISTERED_POSTINGS}</arg>
<arg>posting_spec=${POSTING_SPEC}</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:17.963" endtime="20200317 16:33:17.963"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:17.963" endtime="20200317 16:33:17.963"></status>
</kw>
<kw name="Verify Only &quot;Pre-Set Postings&quot; Left">
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$REGISTERED_POSTINGS == $PRE_SET_POSTINGS</arg>
</arguments>
<status status="PASS" starttime="20200317 16:33:17.964" endtime="20200317 16:33:17.965"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:17.964" endtime="20200317 16:33:17.965"></status>
</kw>
<tags>
<tag>CRUD-operations-as-admin</tag>
</tags>
<status status="PASS" starttime="20200317 16:33:16.695" endtime="20200317 16:33:17.967" critical="yes"></status>
</test>
<kw name="Suite Teardown" type="teardown">
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20200317 16:33:17.970" level="INFO">Delete All Sessions</msg>
<status status="PASS" starttime="20200317 16:33:17.969" endtime="20200317 16:33:17.974"></status>
</kw>
<status status="PASS" starttime="20200317 16:33:17.969" endtime="20200317 16:33:17.974"></status>
</kw>
<doc>This test suite uses robotframework-request library to test BlogPostAPI
Note that the API supports only: 'GET, POST, HEAD, OPTIONS' methods on URL:
https://glacial-earth-31542.herokuapp.com/api/postings/
If you want to update/delete a posting, then you need to use its url. For example:
https://glacial-earth-31542.herokuapp.com/api/postings/26/</doc>
<status status="PASS" starttime="20200317 16:33:11.832" endtime="20200317 16:33:17.974"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">failure-expected</stat>
<stat pass="3" fail="0">CRUD-operations-as-admin</stat>
<stat pass="2" fail="0">smoke-as-admin</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="BlogPostApiTestsAsAdmin">BlogPostApiTestsAsAdmin</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
